#!/usr/bin/env bash

# This script constructs a 'content/' directory that contains content for all
# configured versions of the documentation.

set -o errexit
set -o nounset
set -o pipefail

REPO_ROOT="${REPO_ROOT:-$(cd "$(dirname "$0")/../.." && pwd)}"
VERSION="0.59.1"

source "${REPO_ROOT}/scripts/bin/lib.sh"

hugo="${REPO_ROOT}/bin/hugo"
mkdir -p "$(dirname "$hugo")"

if ! command -v curl &>/dev/null; then
    echo "Ensure curl command is installed"
    exit 1
fi

if ! test -f "${hugo}"; then
    echo "+++ Fetching hugo binary and saving to bin/hugo"
    detect_and_set_goos_goarch

    tmpdir="$(mktemp -d)"
    if [ "$GOOS" = "darwin" ]; then
        curl -Lo "${tmpdir}/file" "https://github.com/gohugoio/hugo/releases/download/v${VERSION}/hugo_extended_${VERSION}_macOS-64bit.tar.gz"
        check_sha "${tmpdir}/file" "c7273605ea3f0ae260b57431a36e02dc23a093f286b3e35e8632fa590a674a80"
    elif [ "$GOOS" = "linux" ]; then
        curl -Lo "${tmpdir}/file" "https://github.com/gohugoio/hugo/releases/download/v${VERSION}/hugo_extended_${VERSION}_Linux-64bit.tar.gz"
        check_sha "${tmpdir}/file" "851b3ac01b86969196b8ca40f0c58a6639f243bcb06541fcd27eff4117f7a3f7"
    else
        echo "Unsupported OS: $GOOS"
        exit 1
    fi

    tar -C "$tmpdir" -xf "${tmpdir}/file"
    mv "${tmpdir}/hugo" "${hugo}"
    chmod +x "${hugo}"
    rm -rf "${tmpdir}"
fi

"${hugo}" "$@"
